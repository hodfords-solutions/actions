name: Build and Publish Library
on:
  workflow_call:
    secrets:
      DOC_SSH_PRIVATE_KEY:
        required: true
        type: string
jobs:
#  check-package:
#    runs-on: ubuntu-latest
#    container: node:22
#    permissions:
#      packages: write
#      contents: read
#    outputs:
#      packageExists: ${{ steps.check.outputs.packageExists }}
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-node@v4
#        with:
#          node-version: '22.x'
#      - run: npm install
#      - name: Check if package is published
#        run: |
#          if [ "$(npm view $(node -p "require('./package.json').name")@$(node -p "require('./package.json').version") version)" = "$(node -p "require('./package.json').version")" ]; then
#            echo "packageExists=True" >> $GITHUB_OUTPUT
#          else
#            echo "packageExists=False" >> $GITHUB_OUTPUT
#          fi
#        id: check
#  build:
#    needs: check-package
#    container: node:22
#    if: ${{ needs.check-package.outputs.packageExists == 'False' }}
#    runs-on: ubuntu-latest
#    env:
#      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#    steps:
#      - uses: actions/checkout@v4
#      - run: npm install
#      - run: npm run build
#      - run: npm publish --access public
  update-docs:
#    needs: build
    runs-on: ubuntu-latest
    container:
      image: clownfishx/docker:0.4
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - run: mkdir -p ~/.ssh
      - run: echo $DOC_SSH_PRIVATE_KEY | base64 -d > ~/.ssh/id_ed25519
        env:
          DOC_SSH_PRIVATE_KEY: ${{ secrets.DOC_SSH_PRIVATE_KEY }}
      - run: chmod 700 ~/.ssh
      - run: chmod 400 ~/.ssh/id_ed25519
      - run: eval $(ssh-agent -s)
      - run: cat ~/.ssh/id_ed25519
      - run: ssh-add ~/.ssh/id_ed25519
      - run: git config --global user.email "actions@github.com"
      - run: git config --global user.name "GitHub Actions"
      - name: Clone docs repository
        run: |
          git clone git@github.com:hodfords-solutions/docs.git docs-repo
          cd docs-repo
          git checkout main
          cd ../

      - name: Update image in values.yaml
        run: |
          export LIB_NAME=$(node -p "require('./package.json').name.replace('@hodfords/', '')")
          echo "---\ndisplayed_sidebar: docs\n---" | cat - README.md > temp && mv temp README.md
          cp README.md docs-repo/pages/$LIB_NAME/index.md

      - name: Commit and Push changes
        shell: sh
        run: |
          export LIB_NAME=$(node -p "require('./package.json').name.replace('@hodfords/', '')")
          cd docs-repo
          git add "pages/$LIB_NAME//index.md"
          git commit -m "Update docs for $LIB_NAME: ${{ github.event.head_commit.message }}"
          git push
